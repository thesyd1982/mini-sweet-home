#!/bin/bash

# ==========================================
# ðŸ’¨ INSTALLATION RAPIDE DE DUST
# ==========================================
# Usage: ./install-dust-only
# PrÃ©requis: Rust/Cargo dÃ©jÃ  installÃ©s

set -euo pipefail

# Couleurs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

log() { echo -e "${BLUE}[INFO]${NC} $1"; }
success() { echo -e "${GREEN}[âœ“]${NC} $1"; }
error() { echo -e "${RED}[âœ—]${NC} $1"; exit 1; }

# VÃ©rifier que cargo est installÃ©
if ! command -v cargo >/dev/null 2>&1; then
    error "Cargo n'est pas installÃ©. ExÃ©cutez d'abord ./install-rust-dust"
fi

# Source l'environnement Rust
source "$HOME/.cargo/env" 2>/dev/null || true

log "Installation de dust..."

# Installer dust avec optimisations
if cargo install du-dust; then
    success "dust installÃ© avec succÃ¨s"
else
    error "Ã‰chec de l'installation de dust"
fi

# VÃ©rifier l'installation
if command -v dust >/dev/null 2>&1; then
    success "$(dust --version | head -1)"
    
    # Test rapide
    log "Test de dust sur le rÃ©pertoire actuel..."
    dust --version >/dev/null && success "dust fonctionne correctement"
    
    echo ""
    echo "ðŸš€ Utilisation de dust :"
    echo "   dust                    # Analyse le rÃ©pertoire actuel"
    echo "   dust /path/to/analyze   # Analyse un rÃ©pertoire spÃ©cifique"
    echo "   dust -d 2              # Limite la profondeur Ã  2 niveaux"
    echo "   dust -r                # Inverse l'ordre (plus gros en premier)"
    echo "   dust -n 10             # Affiche seulement les 10 plus gros"
    echo "   dust -x                # Reste sur le mÃªme systÃ¨me de fichiers"
    echo ""
else
    error "dust n'est pas accessible. VÃ©rifiez que ~/.cargo/bin est dans votre PATH"
fi
