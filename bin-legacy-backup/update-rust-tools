#!/bin/bash

# ==========================================
# üîÑ MISE √Ä JOUR DES OUTILS RUST
# ==========================================
# Usage: ./update-rust-tools

set -euo pipefail

# Couleurs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log() { echo -e "${BLUE}[INFO]${NC} $1"; }
success() { echo -e "${GREEN}[‚úì]${NC} $1"; }
warning() { echo -e "${YELLOW}[‚ö†]${NC} $1"; }
error() { echo -e "${RED}[‚úó]${NC} $1"; exit 1; }

# V√©rifier que cargo est install√©
if ! command -v cargo >/dev/null 2>&1; then
    error "Cargo n'est pas install√©. Ex√©cutez d'abord ./install-rust-dust"
fi

# Source l'environnement Rust
source "$HOME/.cargo/env" 2>/dev/null || true

log "ü¶Ä Mise √† jour de Rust et des outils..."

# Mettre √† jour Rust
log "Mise √† jour de Rust..."
if rustup update; then
    success "Rust mis √† jour"
else
    warning "√âchec de la mise √† jour de Rust"
fi

# Installer cargo-update s'il n'est pas pr√©sent
if ! command -v cargo-install-update >/dev/null 2>&1; then
    log "Installation de cargo-update..."
    cargo install cargo-update
fi

# Mettre √† jour tous les outils install√©s via cargo
log "Mise √† jour de tous les outils Rust install√©s..."
if cargo install-update -a; then
    success "Tous les outils ont √©t√© mis √† jour"
else
    warning "Certains outils n'ont pas pu √™tre mis √† jour"
fi

# Afficher les versions actuelles
echo ""
success "Versions actuelles :"
echo "   $(rustc --version)"
echo "   $(cargo --version)"

if command -v dust >/dev/null 2>&1; then
    echo "   $(dust --version | head -1)"
fi

if command -v rg >/dev/null 2>&1; then
    echo "   ripgrep $(rg --version | head -1 | cut -d' ' -f2)"
fi

if command -v fd >/dev/null 2>&1; then
    echo "   fd $(fd --version)"
fi

if command -v bat >/dev/null 2>&1; then
    echo "   bat $(bat --version | cut -d' ' -f2)"
fi

if command -v exa >/dev/null 2>&1; then
    echo "   exa $(exa --version | head -1 | cut -d' ' -f2)"
fi

success "Mise √† jour termin√©e !"
