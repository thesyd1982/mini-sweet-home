#!/bin/bash

# ================================================
# üè† MINI SWEET HOME - TOOLS MANAGER v1.0
# ================================================
# Gestion rapide activation/d√©sactivation outils

set -euo pipefail

readonly CONFIG_FILE="$HOME/.config/msh/tools.conf"

# Couleurs
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly CYAN='\033[0;36m'
readonly BOLD='\033[1m'
readonly RESET='\033[0m'

declare -A TOOL_STATUS=()

log_info() { echo -e "${BLUE}[INFO]${RESET} $1"; }
log_success() { echo -e "${GREEN}[‚úì]${RESET} $1"; }
log_warning() { echo -e "${YELLOW}[‚ö†]${RESET} $1"; }
log_error() { echo -e "${RED}[‚úó]${RESET} $1"; }
log_header() { echo -e "${CYAN}${BOLD}$1${RESET}"; }

load_config() {
    mkdir -p "$(dirname "$CONFIG_FILE")"
    if [[ -f "$CONFIG_FILE" ]]; then
        source "$CONFIG_FILE"
    else
        # Valeurs par d√©faut
        TOOL_STATUS[eza]="enabled"
        TOOL_STATUS[fd]="enabled"
        TOOL_STATUS[rg]="enabled"
        TOOL_STATUS[bat]="enabled"
        TOOL_STATUS[dust]="enabled"
        TOOL_STATUS[starship]="enabled"
    fi
}

save_config() {
    cat > "$CONFIG_FILE" << EOF
# Configuration des outils MSH
TOOL_STATUS[eza]="${TOOL_STATUS[eza]:-enabled}"
TOOL_STATUS[fd]="${TOOL_STATUS[fd]:-enabled}"
TOOL_STATUS[rg]="${TOOL_STATUS[rg]:-enabled}"
TOOL_STATUS[bat]="${TOOL_STATUS[bat]:-enabled}"
TOOL_STATUS[dust]="${TOOL_STATUS[dust]:-enabled}"
TOOL_STATUS[starship]="${TOOL_STATUS[starship]:-enabled}"
EOF
    log_success "Configuration sauvegard√©e"
}

toggle_tool() {
    local tool="$1"
    if [[ "${TOOL_STATUS[$tool]:-disabled}" == "enabled" ]]; then
        TOOL_STATUS[$tool]="disabled"
        log_warning "$tool d√©sactiv√©"
        
        # D√©sactiver r√©ellement l'outil
        case $tool in
            eza) unalias ls 2>/dev/null || true ;;
            fd) unalias find 2>/dev/null || true ;;
            rg) unalias grep 2>/dev/null || true ;;
            bat) unalias cat 2>/dev/null || true ;;
            dust) unalias du 2>/dev/null || true ;;
        esac
    else
        TOOL_STATUS[$tool]="enabled"
        log_success "$tool activ√©"
        
        # Activer r√©ellement l'outil
        case $tool in
            eza) alias ls='eza -la --icons' 2>/dev/null || true ;;
            fd) alias find='fd' 2>/dev/null || true ;;
            rg) alias grep='rg' 2>/dev/null || true ;;
            bat) alias cat='bat --style=plain' 2>/dev/null || true ;;
            dust) alias du='dust' 2>/dev/null || true ;;
        esac
    fi
}

show_status() {
    log_header "üîß √âtat des outils modernes"
    echo
    
    local tools=("eza" "fd" "rg" "bat" "dust" "starship")
    for tool in "${tools[@]}"; do
        local status_icon="‚ùå"
        local status_text="d√©sactiv√©"
        local install_status="‚ùì"
        
        if command -v "$tool" >/dev/null 2>&1; then
            install_status="‚úÖ"
        else
            install_status="‚ùå"
        fi
        
        if [[ "${TOOL_STATUS[$tool]:-disabled}" == "enabled" ]]; then
            status_icon="‚úÖ"
            status_text="activ√©"
        fi
        
        printf "  %-10s [%s] %-10s [%s] install√©\n" "$tool" "$status_icon" "$status_text" "$install_status"
    done
    echo
}

quick_toggle() {
    local tool="$1"
    load_config
    
    if [[ -z "$tool" ]]; then
        log_error "Usage: msh tools <outil>"
        echo "Outils disponibles: eza, fd, rg, bat, dust, starship"
        return 1
    fi
    
    if [[ ! " eza fd rg bat dust starship " =~ " $tool " ]]; then
        log_error "Outil '$tool' non reconnu"
        return 1
    fi
    
    toggle_tool "$tool"
    save_config
}

tool_management_menu() {
    while true; do
        clear
        log_header "üõ†Ô∏è Gestion des outils MSH"
        echo
        
        show_status
        
        echo "Actions :"
        echo "  1) eza     2) fd      3) rg"
        echo "  4) bat     5) dust    6) starship"
        echo
        echo "  7) üíæ Sauvegarder    8) üîÑ Recharger"
        echo "  9) üìä Status         0) ‚Ü©Ô∏è  Quitter"
        echo
        
        read -p "Choix [0-9]: " choice
        
        case $choice in
            1) toggle_tool "eza" ;;
            2) toggle_tool "fd" ;;
            3) toggle_tool "rg" ;;
            4) toggle_tool "bat" ;;
            5) toggle_tool "dust" ;;
            6) toggle_tool "starship" ;;
            7) save_config; read -p "Appuyez sur Entr√©e..." ;;
            8) load_config; log_success "Configuration recharg√©e" ;;
            9) show_status; read -p "Appuyez sur Entr√©e..." ;;
            0) break ;;
            *) log_error "Choix invalide" ;;
        esac
        
        [[ $choice =~ ^[1-6]$ ]] && sleep 1
    done
}

main() {
    load_config
    
    case "${1:-menu}" in
        menu|"") tool_management_menu ;;
        status) show_status ;;
        save) save_config ;;
        load) load_config; log_success "Configuration charg√©e" ;;
        *) quick_toggle "$1" ;;
    esac
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
